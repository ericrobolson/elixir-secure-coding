# ESCT: Part 4 - GraphQL Security

```elixir
Mix.install([
  {:grading_client, path: "#{__DIR__}/grading_client"}
])

check_answer = fn answer, question_id ->
  GradingClient.check_answer(answer, 4, question_id)
end

:ok
```

## Introduction

> ### ðŸ›  <span style="color:goldenrod;">MODULE UNDER CONSTRUCTION - Please move to next module</span>

_TODO: Write Introduction_

## Table of Contents

- [Disabling Introspection](#disabling-introspection)
- [Error Disclosure](#error-disclosure)
- [Resource Exhaustion](#resource-disclosure)
  - [Cost Theory](#cost-theory)

## Disabling Introspection

### Description

_TODO: Write Description_

### Prevention

_TODO: Write Prevention_

### <span style="color:blue;">Example</span> / <span style="color:red;">Quiz</span>

_TODO: Make Example or Quiz Question_

```elixir

```

## Error Disclosure

### Description

_TODO: Write Description_

### Prevention

_TODO: Write Prevention_

### <span style="color:blue;">Example</span> / <span style="color:red;">Quiz</span>

_TODO: Make Example or Quiz Question_

```elixir

```

## Resource Exhaustion

### Description

_TODO: Write Description_

### Prevention

_TODO: Write Prevention_

### <span style="color:blue;">Example</span> / <span style="color:red;">Quiz</span>

_TODO: Make Example or Quiz Question_

```elixir

```

<!-- livebook:{"branch_parent_index":4} -->

## Cost Theory

### Description

_TODO: Write Description_

### Prevention

_TODO: Write Prevention_

### <span style="color:blue;">Example</span> / <span style="color:red;">Quiz</span>

_TODO: Make Example or Quiz Question_

```elixir

```

[**<- Previous Module: Secure SDLC Concepts**](./3-ssdlc.livemd) || [**Next Module: Elixir Security ->**](./5-elixir.livemd)
